

Now let's look at the main.tf file.

So here we mentioned the provider, we have the provider Kubernetes.

And in this we need to pass the value for host.

So we don't have it yet, right?

So module dot x in that we have the variable cluster endpoint.

So once this is created, this is going to return the endpoint of the cluster like in kube config file

we have the URL right for the control plane like that, it's going to store it, put it into this host

variable and a cluster certificate.

We're using base64 decode and from module we have this cluster underscore certificate underscore authority

data and its value will be decoded and it will be stored into this certificate variable.

This is required to use this Kubernetes module.

Then we have our provider and we have to pass the region.

So dot region that value is coming from the variable right y dot region.

So it's going to be US East one.

Okay, now this one.

So we will be creating VPC.

And we don't know the the names of the availability zones in this region.

Now, this is going to fetch that data availability zones available, and this is going to get the list

of all the zones in that region.

And that will be mentioned in module.

So let's go to VPC.

So module VPC, give the source version name of the VPC Cidr value.

And then eases availability zones.

Here you need to mention the availability zone.

So you see what we are doing here.

We're using a slice function which is going to get.

Values from here data dot availability underscore zones dot available which is coming from here.

Available availability zones dot available and inside that you will have a variable names which will

be in string.

So this string will be sliced.

So 0 to 3 means 012.

So the first zone, second zone and the third zone, all these three names you will get here in a list

format.

So square bracket, you will have us east one, a US east comma, us east, one B comma us east, one

C like that.

And that will be stored into this variable.

Or you can just create a list here and mention it manually.

Also now private subnets, it's again in the list format.

So three private subnet there and three public subnet there.

Now if you changing it to two subnets here, then make sure you give here 0 to 2.

Okay then enable Nat Gateway.

True.

So it will create a nat gateway and you will have three nat gateways if you have three private subnets.

So we say single nat gateway.

True.

These are again the same variable from the modules documentation.

Okay.

So you don't need to buy hard.

These things enable DNS host names.

True.

And for X, we need to give these tags.

This is again from the documentation.

So is a public subnet tags.

These are the variable again from the documentation and you can mention the tags over here.

Okay.

I just wanted to show you the documentation.

Right.

So I just googled X.

VPC tags and got this link.

So you see this one?

No, sorry.

This one.

So this should be the tags in the subnets that is used by ECS.

Kubernetes.io slash cluster slash my cluster which will be your cluster name value should be shared.

So here we have given the variable which will be generated after the cluster is created.

So local cluster name.

Okay, so that is about using the VPC module.

Now let's look at our final cluster.

So module X source.

Then you have cluster name, local cluster, underscore name VPC id you see that module dot vpc dot

vpc underscore ID subnet IDs, module dot vpc, dot private underscore subnets.

Right.

So these are the modules that we are using, right?

Right.

So module dot VPC.

And then when this VPC is created, you will get those.

Variables their vpc id private subnets.

Okay then we are giving here managed node groups.

This is the type.

There are many other different types.

We are sticking with this one.

So the simple information will create the cluster.

But we also need the nodes in this and that can be created by using managed node groups this resource.

So one.

Name of the node group instance type.

I've kept it T3 small, so you will be charged for T3 small and the cluster.

If you do it like within an hour.

Right.

Don't keep it more than an hour.

Then the bill will be very less, very small.

So it also maintains Autoscaling group.

So you can say minimum size one, maximum size three desired size two.

So first you will have two instances and then if the load increases, you can have maximum three.

So it uses autoscaling groups.

You don't need to worry about scaling.

Also you can give the bigger size also.

So this is a first node group and this is the second node group.

Here we kept the desired size as one.

So total there will be three instances for the node group with three small and a control plane.

Which is not visible.

The control plane instance is not visible.

It is the cluster.

Generally we call it, and this will be the endpoint and public endpoint.

We say true.

So we get the endpoint to access it.

No more than that.

Okay.

So take some time.

Go through all of this.

Whatever changes you made in Terraform.tf file, make sure those are correct.

Your region bucket name and in the variables.

If you are making change, make sure.

It's with right syntax.

So now you have to install TerraForm.

So you can use chocolatey Choco install TerraForm which did this in prerequisites lecture in Mac OS,

you have to say brew install TerraForm.

The TerraForm will be installed.

Create an Iam user download the access key.

So I already have a user iam user.

So create an Iam user whatever name you want.

Go to its security credentials and also make sure the policies administrator access when you create

the user.

Okay, give it full access and go to then security credentials.

I should not show you the access key.

Anyways, click on Create Access Key.

Download the Access Key.

Open git bash.

Or terminal or Mac.

Run.

Configure.

Mentioned the access key ID from the CSV file mentioned the secret access key from the CSV file mentioned

the region, which is US east one for US and output format Json.

And make sure TerraForm is installed.

So I already have TerraForm.

Now I'm going to switch to the folder f.

TerraForm hyphen x.

Let's see.

Profile project.

Okay.

So I have cloned my repository in this path.

So come to this path.

Dwellers look at all the scripts and you have to say terraform.

In it.

Now, this might take a long time for the first.

Okay.

I seem to have a very older version of TerraForm on this one because I was experimenting with something,

so I'm going to install the latest version.

So let me open my PowerShell.

As administrator.

Open it as administrator.

Choko uninstall.

TerraForm.

Okay, it is uninstalled now I'm going to install it.

Okay.

It's installed.

I'm going to close the PowerShell.

I'm going to close the git bash also.

Open a new git bash.

And then let's get into the folder.

To hyphen.

There is a Dot TerraForm folder.

I'm going to remove that.

And then we're going to run terraform init once again.

Okay.

Initialized.

And now I'm going to run TerraForm.

Plan.

Okay, then let's take a look.

What all it is going to create.

So take some time and read this.

It's a very long output, but it's basically everything that it is going to do.

And if you don't want to spend any money, then you stop right now, watch the rest of the lecture.

But if you can, then please do terraform apply.

Its plan is to add 53 resources.

Yeah.

So as you know, we have VPC, we have Nat gateways in that that will come with charge.

We have ECS cluster that will be charged.

There is no pricing for it.

We have nodes.

And few other resources that will be not free.

You have to pay for it.

So if you don't want to do anything else after this, you can just say no to this or I'm going to say

yes.

And this is going to take a very long time.

So I'm going to pause my recording now and come back when this is completed.

Okay.

After waiting for some time, my cluster is created.

And that's the end point of my cluster.

And if I look from console, I'll switch to the region, North Virginia.

And that's my Kubernetes cluster.

And that's the endpoint of the cluster.

Don't try to delete the cluster from there.

You have to do it only from TerraForm.

Let's look at the node group.

So we have two node groups.

One contains two nodes and one contains just one node.

Networking.

We should see the VPC over there and we have three subnets in total.

We have three public and three private subnet in the VPC.

We'll look at the VPC.

That's our VPC.

And in the subnets we should have total six subnets, three public, three private.

Okay.

So in order to generate the kube config file, we have this simple command.

And there should be the user configured so we can just copy this command.

And in our machine we have user configured.

We did configure.

So we'll use this command, we'll change the name to the name of our cluster.

Mine is Wipro Hyphen X.

I changed it from profile to Wipro and the region code.

Is us East one.

Okay.

I think I made a mistake over there.

It's us.

East one, not us East one.

Let me cancel this.

So the US East one.

Okay, so the Kubeconfig file is generated at this location.

Let's do a cat to it.

Tilde slash dot.

Cube slash config.

And that's the Kubeconfig file.

So I'm going to run now.

Kubectl get nodes.

So it should read the kubeconfig file.

So if you don't have kubectl installed so you can install it through PowerShell in Windows in Mac OS,

you can install it through the terminal.

So open PowerShell as administrator and you have to run the command Choko install.

Kubernetes hyphen cli.

So this command should install kubectl command line utility for you.

If it's Mac os, you have to use just brew install kubernetes hyphen CLI.

Then you can run that command to generate the cluster config file and then you can use kubectl command.

So from here on it will be same thing.

Kubectl get nodes, pods, the same story.

We have already used Kubernetes cluster so we know what we can do with Kubernetes cluster.

So this is all now once your cluster you have tested.

If it's working, you should immediately delete the cluster.

So TerraForm Destroy.

Right, because there are many things that the meter is running on, right?

So we should delete it ASAP.

So this is going to delete everything.

Say just yes, all the resources it will delete and it will take a very long time to delete this cluster.

So wait until it is completely cleaned.

Deleted.



